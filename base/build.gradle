apply plugin: 'com.android.library'
apply plugin: 'hugo'

android {
    compileSdkVersion rootProject.ext.compileSdk
    buildToolsVersion rootProject.ext.buildToolsVersion

    def buildNumber = (System.getenv("BUILD_NUMBER") == null ? 0 : System.getenv("BUILD_NUMBER")) as int
    def gitBranch = (System.getenv("GIT_BRANCH") == null ? "local" : System.getenv("GIT_BRANCH").replace("origin/", ""))

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        buildConfigField "Integer", "BUILD_NUMBER", "" + buildNumber + ""
        buildConfigField "String", "GIT_BRANCH", "\"" + gitBranch + "\""
        versionCode buildNumber
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        lintConfig file("lint.xml")
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.jakewharton.timber:timber:2.+'
    compile "com.android.support:palette-v7:${rootProject.ext.appCompatVersion}"
    compile "com.android.support:appcompat-v7:${rootProject.ext.appCompatVersion}"
    compile 'com.squareup.okhttp:okhttp:2.+'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.+'
    compile 'com.squareup.picasso:picasso:2.+'
    compile 'com.google.code.gson:gson:2.+'
    compile "com.android.support:mediarouter-v7:${rootProject.ext.appCompatVersion}"
    compile project(':vlc')
    compile project(':xmlrpc')
    compile files('libs/frostwire-jlibtorrent.jar')
}
